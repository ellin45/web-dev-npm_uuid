const path = require('path');

const express = require('express');


const defaultRoutes = require('./routes/default');
const restaurantsRoutes = require('./routes/restaurants');
const app = express();

app.set('views', path.join(__dirname, 'views'))
app.set('view engine', 'ejs');

app.use(express.static('public'));
app.use(express.urlencoded({extended: false}));

app.use('/',defaultRoutes);
app.use('/',restaurantsRoutes);


app.use(function(req, res) {
    res.render('404');
});

app.use(function(error, req, res, next) {
    res.render('500');
});

app.listen(3000);

//동적 라우트의 라우트 매개변수
//이 섹션에서는 라우트 매개변수를 활용하여 URL경로에서 동적 값을 추출하는 동적 라우트에 대해 배웠습니다. 예를 들어 
//router.get('/restaurants/:id', ...)
//이 예에서 id는 이 url경로를 방문 할 때 다른 값을 유지하는 라우트 매개변수입니다. 예를 들어 사용자가 /restaurants/r1을 입력하면 id는 r1과 같습니다
//라우트 매개변수는 하나의 단일 경로를 사용하여 구체적인 라우트 매개변수 값에 따라 다른 데이터를 로드할 수 있으므로 매우 유용합니다.
//라우트 매개변수(위의 예에서 :id)가 URL 경로의 핵심 부분임을 이해하는 것이 중요합니다. 예를 들어 위의 경로에서는 /restaurants만 처리되지 않습니다.
// 라우트 매개변수에 대한 값이 없기 때문입니다.
// 쿼리 매개변수

// 또한 이 섹션에서 "쿼리 매개변수"라는 개념에 대해서도 배웠습니다.
// 쿼리 매개변수와 라우트 매개변수를 혼동하기 쉽지만 이들은 서로 다른 문제를 해결하는 근본적으로 다른 개념입니다.
// 라우트 매개변수가 선택 사항이 아니고 라우트 정의의 핵심 부분인 경우 즉 라우트 매개변수에 값이 제공되지 않으면 로드가 활성화 되지 않음 쿼리 매개변수는 완전히 선택 사항입니다!
// 쿼리 매개변수는 일반적으로 URL경로에 추가 정보를 추가하는 데 사용됩니다.
// 예를 들어:
// 여기서 "order" 쿼리 매개변수는 "asc"값으로 추가됩니다. 쿼리 매개변수는 항상?기호를 통해 주경로와 분리됨
// 기본적으로 쿼리 매개변수는 아무 작업도 수행하지 않습니다.
// 웹사이트 방문자는 원하는 만큼 추가할 수 있습니다. 링크를 통해 추가하거나 이전 강의에서와 같이 GET 요청을 통해 양식을 제출하여 추가할 수 있습니다.
// 참고:GET양식 대신 이전 강의에서 쿼리 매개변수로 링크를 구성할 수도 있었습니다. 
// 서버 측에서 추가 작업을 수행하기 위해 이러한 선택적 쿼리 매개변수를 처리할 수 있는 코드를 추가하는 것은 개발자에게 달려 있습니다. 예를 들어, 배열의 항목 순서를 변경할 수 있습니다. (마지막 강의) 항목을 필터링하거나 다른 작업을 수행할 수 있습니다.
// 라우트 매개변수와 쿼리 매개변수
// 위에서 설명한 것처럼 쿼리 매개변수는 선택 사항이며 경로 라우트의 핵심 부분이 아니지만 라우트 매개변수는 선택 사항입니다!

// 라우트 매개변수는 활성화 되어야 하는 경로를 결정하는 데 사용되며 라우트 매개변수에 대한 구체적인 값을 얻기 위해 라우트 내부에서 구문 분석될 수 있습니다.
// 반면에 쿼리 매개변수는 선택 사항이고 일반적으로 실행할 라우트를 결정하는 데 사용하지 않습니다. 대신 로드된 라우트/URL에 추가 정보를 첨부하는데 사용할 수 있습니다.